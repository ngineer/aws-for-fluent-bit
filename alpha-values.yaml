global:
  # Override the deployment namespace
image:
  repository: public.ecr.aws/aws-observability/aws-for-fluent-bit
  tag: 2.28.4
  pullPolicy: IfNotPresent
service:
  extraService: |
    Flush                     5
    Log_Level                 info
    Daemon                    off
    Grace                     30
    HTTP_Server  On
    HTTP_Listen  0.0.0.0
    HTTP_PORT    2020
    storage.path              /var/fluent-bit/state/flb-storage/
    storage.sync              normal
    storage.checksum          off
    storage.backlog.mem_limit 128MB
  extraParsers: |
    [PARSER]
        Name                syslog
        Format              regex
        Regex               ^(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
        Time_Key            time
        Time_Format         %b %d %H:%M:%S
    [PARSER]
        Name                container_firstline
        Format              regex
        Regex               (?<log>(?<="log":")\S(?!\.).*?)(?<!\\)".*(?<stream>(?<="stream":").*?)".*(?<time>\d{4}-\d{1,2}-\d{1,2}T\d{2}:\d{2}:\d{2}\.\w*).*(?=})
        Time_Key            time
        Time_Format         %Y-%m-%dT%H:%M:%S.%LZ
    [PARSER]
        Name                cwagent_firstline
        Format              regex
        Regex               (?<log>(?<="log":")\d{4}[\/-]\d{1,2}[\/-]\d{1,2}[ T]\d{2}:\d{2}:\d{2}(?!\.).*?)(?<!\\)".*(?<stream>(?<="stream":").*?)".*(?<time>\d{4}-\d{1,2}-\d{1,2}T\d{2}:\d{2}:\d{2}\.\w*).*(?=})
        Time_Key            time
        Time_Format         %Y-%m-%dT%H:%M:%S.%LZ
input:
  tag: "application.*"
  path: "/var/log/containers/*.log"
  db: "/var/fluent-bit/state/flb_container.db"
  parser: docker, cri
  memBufLimit: 50MB
  skipLongLines: "On"
  refreshInterval: 10
  extraInputs: |
    Rotate_Wait         30
    storage.type        filesystem
    Read_from_Head      Off
    Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/aws-for-fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*

filter:
  match: "application.*"
  kubeURL: "https://kubernetes.default.svc.cluster.local:443"
  mergeLog: "On"
  mergeLogKey: "log_processed"
  keepLog: "On"
  k8sLoggingParser: "On"
  k8sLoggingExclude: "Off"
  bufferSize: "0"
  # Uncomment the extraFilters to use Kubelet to get the Metadata instead of talking to API server for large clusters
  # Check this link for more details https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights-use-kubelet.html
  extraFilters: |
    Kube_Tag_Prefix     application.var.log.containers.
    Labels              Off
    Annotations         Off
    Use_Kubelet         true
    Kubelet_Port        10250
    Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
additionalInputs: |
  [INPUT]
      Name                tail
      Tag                 application.*
      Path                /var/log/containers/aws-for-fluent-bit*
      multiline.parser    docker, cri
      DB                  /var/fluent-bit/state/flb_log.db
      Mem_Buf_Limit       100MB
      Skip_Long_Lines     On
      Refresh_Interval    10
      Read_from_Head      Off
  [INPUT]
      Name                tail
      Tag                 application.*
      Path                /var/log/containers/cloudwatch-agent*
      multiline.parser    docker, cri
      DB                  /var/fluent-bit/state/flb_cwagent.db
      Mem_Buf_Limit       50MB
      Skip_Long_Lines     On
      Refresh_Interval    10
      Read_from_Head      Off
  [INPUT]
      Name                systemd
      Tag                 dataplane.systemd.*
      Systemd_Filter      _SYSTEMD_UNIT=docker.service
      Systemd_Filter      _SYSTEMD_UNIT=kubelet.service
      DB                  /var/fluent-bit/state/systemd.db
      Path                /var/log/journal
      Read_From_Tail      On
  [INPUT]
      Name                tail
      Tag                 dataplane.tail.*
      Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*
      multiline.parser    docker, cri
      DB                  /var/fluent-bit/state/flb_dataplane_tail.db
      Mem_Buf_Limit       50MB
      Skip_Long_Lines     On
      Refresh_Interval    10
      Rotate_Wait         30
      storage.type        filesystem
      Read_from_Head      Off
  [INPUT]
      Name                tail
      Tag                 host.dmesg
      Path                /var/log/dmesg
      Parser              syslog
      DB                  /var/fluent-bit/state/flb_dmesg.db
      Mem_Buf_Limit       50MB
      Skip_Long_Lines     On
      Refresh_Interval    10
      Read_from_Head      Off
  [INPUT]
      Name                tail
      Tag                 host.messages
      Path                /var/log/messages
      Parser              syslog
      DB                  /var/fluent-bit/state/flb_messages.db
      Mem_Buf_Limit       50MB
      Skip_Long_Lines     On
      Refresh_Interval    10
      Read_from_Head      Off
  [INPUT]
      Name                tail
      Tag                 host.secure
      Path                /var/log/secure
      Parser              syslog
      DB                  /var/fluent-bit/state/flb_secure.db
      Mem_Buf_Limit       50MB
      Skip_Long_Lines     On
      Refresh_Interval    10
      Read_from_Head      Off
additionalFilters: |
  [FILTER]
      Name                modify
      Match               dataplane.systemd.*
      Rename              _HOSTNAME                   hostname
      Rename              _SYSTEMD_UNIT               systemd_unit
      Rename              MESSAGE                     message
      Remove_regex        ^((?!hostname|systemd_unit|message).)*$
  [FILTER]
      Name                aws
      Match               dataplane.*
      imds_version        v1
  [FILTER]
      Name                aws
      Match               host.*
      imds_version        v1
cloudWatch:
  enabled: true
  match: "application.*"
  region: "eu-west-1"
  logGroupName: "/aws/eks/containerinsights/eks-dev-private-cluster/application"
  logStreamPrefix: "eks-dev-private-cluster"
  autoCreateGroup: true
  extraOutputs: |
    auto_create_group     false
    extra_user_agent      container-insights

s3:
  enabled: true
  match: "application.*"
  bucket: "alpha-dev-private-eks-logs"
  region: "eu-west-1"
  jsonDateKey: "date"
  jsonDateFormat: "iso8601"
  totalFileSize: "100M"
  uploadChunkSize: "6M"
  uploadTimeout: "10m"
  storeDir: "/tmp/fluent-bit/s3"
  storeDirLimitSize: 0
  s3KeyFormat: /eks-dev-private-cluster/$TAG/%Y-%m-%d/%H-%M-%S
  s3KeyFormatTagDelimiters: ".-"
  staticFilePath: false
  usePutObject: false

firehose:
  enabled: false
kinesis:
  enabled: false
elasticsearch:
  enabled: false
additionalOutputs: |
  [OUTPUT]
      Name                cloudwatch_logs
      Match               dataplane.*
      region              eu-west-1
      log_group_name      /aws/eks/containerinsights/eks-dev-private-cluster/dataplane
      log_stream_prefix   eks-dev-private-cluster
      auto_create_group   true
      extra_user_agent    container-insights
  [OUTPUT]
      Name                cloudwatch_logs
      Match               host.*
      region              eu-west-1
      log_group_name      /aws/eks/containerinsights/eks-dev-private-cluster/host
      log_stream_prefix   eks-dev-private-cluster
      auto_create_group   true
      extra_user_agent    container-insights
  [OUTPUT]
      Name                         s3
      Match                        dataplane.*
      bucket                       alpha-dev-private-eks-logs
      region                       eu-west-1
      s3_key_format                /eks-dev-private-cluster/dataplane/$TAG/%Y-%m-%d/%H-%M-%S
      s3_key_format_tag_delimiters .-
      use_put_object               false
      tls                          Off
serviceAccount:
  create: true
  annotations: {
    "eks.amazonaws.com/role-arn": arn:aws:iam::184892313502:role/fluentbit-role
  }
  name: fluentbit-sa-role
resources:
  limits:
    memory: 1500Mi
  requests:
    cpu: 50m
    memory: 500Mi
tolerations:
  - key: node-role.kubernetes.io/master
    operator: Exists
    effect: NoSchedule
  - operator: "Exists"
    effect: "NoExecute"
  - operator: "Exists"
    effect: "NoSchedule"
hostNetwork: true
dnsPolicy: ClusterFirstWithHostNet
env:
  - name: HOST_NAME
    valueFrom:
      fieldRef:
        apiVersion: v1
        fieldPath: spec.nodeName
volumes:
  - hostPath:
      path: /var/fluent-bit/state
      type: ""
    name: fluentbitstate
  - hostPath:
      path: /var/lib/docker/containers
    name: varlibdockercontainers
  - hostPath:
      path: /var/log
    name: varlog
  - name: runlogjournal
    hostPath:
      path: /run/log/journal
  - name: dmesg
    hostPath:
      path: /var/log/dmesg
volumeMounts:
  - mountPath: /var/fluent-bit/state
    mountPropagation: None
    name: fluentbitstate
  - mountPath: /var/lib/docker/containers
    name: varlibdockercontainers
    readOnly: true
  - mountPath: /var/log
    name: varlog
    readOnly: true
  - name: dmesg
    mountPath: /var/log/dmesg
    readOnly: true
  - name: runlogjournal
    mountPath: /run/log/journal
    readOnly: true